library(mgcv)
loess_mod1 <- loess(nuovi_positivi ~ terapia_intensiva + ricoverati_con_sintomi_prev + nuovi_tamponi_pcr  , data = df )
loess_mod1_pred <- predict(loess_mod1, type="response", se.fit = TRUE)
summary(loess_mod1)
d<-df
d$data <- as.numeric(d$data)
ggplot(data=d)+
geom_point(aes(x=data , y=nuovi_positivi))
loess_mod1<-loess(nuovi_positivi~ data + ricoverati_con_sintomi + nuovi_tamponi_pcr, data = d)
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(loess_mod1,type="response"), color = "model 4", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
library(mgcv)
loess_mod1 <- loess(nuovi_positivi ~ terapia_intensiva + ricoverati_con_sintomi_prev + nuovi_tamponi_pcr  , data = df )
loess_mod1_pred <- predict(loess_mod1, type="response", se.fit = TRUE)
summary(loess_mod1)
d<-df
d$data <- as.numeric(d$data)
loess_mod1<-loess(nuovi_positivi~ data + ricoverati_con_sintomi + nuovi_tamponi_pcr, data = d)
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(loess_mod1,type="response"), color = "model 4", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
library(mgcv)
loess_mod1 <- loess(nuovi_positivi ~ terapia_intensiva + ricoverati_con_sintomi_prev + nuovi_tamponi_pcr  , data = df )
loess_mod1_pred <- predict(loess_mod1, type="response", se.fit = TRUE)
summary(loess_mod1)
d<-df
d$data <- as.numeric(d$data)
loess_mod1<-loess(nuovi_positivi~ data + ricoverati_con_sintomi + nuovi_tamponi_pcr, data = d)
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(loess_mod1,type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() +
geom_point(data = df_extended, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df_extended$color))])+
geom_line(data = df_extended, aes(x = data, y = predict(loess_mod1,  newdata=df_extended, type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df_extended$data <- as.numeric(df_extended$data)
ggplot() +
geom_point(data = df_extended, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df_extended$color))])+
geom_line(data = df_extended, aes(x = data, y = predict(loess_mod1,  newdata=df_extended, type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df_extended <- data.frame(read.csv("sicily_secondwave_covid.csv"))
df_extended$data <- as.Date(df_extended$data,  "%Y-%m-%d")
df <- df_extended[which(df_extended$data >= "2020-10-01" & df_extended$data <= "2021-01-31"),]
df$data <- as.Date(df$data,  "%Y-%m-%d")
col_zone <- c("#fc6b03","#cfcaca","#f2d729","#b3190b")
ncols <- dim(df)[2]
na_count <- sapply(df[,-c((ncols-15):ncols)], function(y) sum(length(which(is.na(y)))))
na_count <- data.frame( gsub("_", " ", names(na_count)),na_count)
colnames(na_count) <- c("variable", "missing values")
library(gridExtra)
library(grid)
color_df <- data.frame(color = c("#bed0e8", "#809cc2"), stringsAsFactors = FALSE)
my_table_theme <- ttheme_default(core=list(bg_params = list(fill = color_df$color[1:2], col=NA),padding=unit.c(unit(4, "mm"), unit(10, "mm"))), colhead =list(bg_params=list(fill ="#5680ba")))
grid.newpage()
grid.draw(tableGrob(na_count, rows=NULL))
# png("images/missing_values_table.png", width=4.5,height=6.5,bg = "white",units="in",res=1200)
# grid.table(na_count, rows=NULL)
# dev.off()
library(ggplot2)
library(patchwork)
ggplot() +
geom_line(data = df, aes(x = data, y = nuovi_positivi, group = 1)) +
geom_point(data = df, aes(x = data, y = nuovi_positivi, group = 1),col=col_zone[unclass(as.factor(df$color))], size=2)+
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggsave(paste0( "images/response_variable.png"), width = 20, height = 8, dpi = 150)
library("ggcorrplot")
library("corrplot")
corr_df <- df
corr_df$data <- as.numeric(corr_df$data)
cols <- c("data", "ricoverati_con_sintomi","terapia_intensiva","totale_ospedalizzati", "isolamento_domiciliare", "totale_positivi", "dimessi_guariti", "deceduti", "tamponi", "totale_casi", "casi_testati","nuovi_positivi")
M=cor(corr_df[,cols])
colnames(M) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "L", "K", "I")
rownames(M) <- paste0(colnames(M), ". ", gsub("_", " ", cols))
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(M,col.lim=c(-1,1),is.corr=FALSE, method="color", col=col(200), type="lower", addCoef.col = "black", tl.col = "black",tl.srt = 360, tl.offset = 1, tl.cex=0.7)
# png("images/variables_corrplot.png", width=10,height=8,units="in",res=1500)
# corrplot(M,col.lim=c(0,1),is.corr=FALSE, method="color",col=col(200),
#      type="lower", addCoef.col = "black", tl.col = "black",tl.srt = 360, tl.offset = 1, tl.cex=1.1)
# dev.off()
library("ggcorrplot")
library("corrplot")
library("dvmisc")
df$nuovi_tamponi <- df$nuovi_tamponi_pcr
cols <- c("ricoverati_con_sintomi", "isolamento_domiciliare","terapia_intensiva", "nuovi_tamponi",  "nuovi_positivi")
M=cor(df[,cols])
colnames(M) <- c("A", "B", "C", "D", "E")
rownames(M) <- paste0(colnames(M), ". ", gsub("_", " ", cols))
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(M, method="color", col=col(200),  col.lim=c(0,1), is.corr=FALSE, type="lower", addCoef.col = "black", tl.col = "black", tl.srt = 360, tl.offset = 1, tl.cex=0.7)
# png("images/variables_corrplot2.png", width=10,height=8,units="in",res=1500)
# corrplot(M,col.lim=c(0,1),is.corr=FALSE, method="color",col=col(200),
#      type="lower", addCoef.col = "black", tl.col = "black",tl.srt = 360, tl.offset = 1, tl.cex=1.1)
# dev.off()
#png("images/scatterplot_covariates.png", width=13,height=6.5,bg = "white",units="in",res=1500)
par(mfrow=c(2,3))
plot(ricoverati_con_sintomi ~ terapia_intensiva, data = df, pch =16, xlab = "terapia intensiva", ylab = "ricoverati con sintomi", col="#0b084d")
plot(ricoverati_con_sintomi ~ nuovi_tamponi_pcr, data = df, pch =16, xlab = "nuovi tamponi", ylab = "ricoverati con sintomi", col="#0b084d")
plot(ricoverati_con_sintomi ~ isolamento_domiciliare, data = df, pch =16, xlab = "isolamento domiciliare", ylab = "ricoverati con sintomi", col="#0b084d")
plot(terapia_intensiva ~ nuovi_tamponi_pcr, data = df, pch =16, xlab = "nuovi tamponi", ylab = "terapia intensiva", col = "#0b084d")
plot(isolamento_domiciliare ~ nuovi_tamponi_pcr, data = df, pch =16, xlab = "nuovi tamponi", ylab = "isolamento domiciliare", col="#0b084d")
plot(isolamento_domiciliare ~ terapia_intensiva, data = df, pch =16, xlab = "terapia intensiva", ylab = "isolamento domiciliare", col="#0b084d")
#dev.off()
p1 <- ggplot() +
geom_line(data = df, aes(x = data, y = log(nuovi_positivi), color="nuovi positivi", group = 1),ylab="") +
geom_point(data = df, aes(x = data, y = log(nuovi_positivi), group = 1))+
geom_line(data = df, aes(x = data, y = log(nuovi_tamponi_pcr), color="nuovi tamponi", group = 1)) +
geom_point(data = df, aes(x = data, y = log(nuovi_tamponi_pcr),color="nuovi tamponi", group = 1)) +
geom_line(data = df, aes(x = data, y = log(ricoverati_con_sintomi), color="ricoverati con sintomi", group = 1)) +
geom_point(data = df, aes(x = data, y = log(ricoverati_con_sintomi),color="ricoverati con sintomi", group = 1)) +
geom_line(data = df, aes(x = data, y = log(terapia_intensiva), color="terapia intensiva", group = 1)) +
geom_point(data = df, aes(x = data, y = log(terapia_intensiva),color="terapia intensiva", group = 1)) +
geom_line(data = df, aes(x = data, y = log(isolamento_domiciliare), color="isolamento domiciliare", group = 1)) +
geom_point(data = df, aes(x = data, y = log(isolamento_domiciliare),color="isolamento domiciliare", group = 1)) +
scale_x_date(date_breaks = '5 days', date_labels = '%Y-%m-%d') +
labs(y = "log") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
scale_colour_manual(values = c("nuovi positivi" = "black", "nuovi tamponi" ="#2f6d80", "ricoverati con sintomi" = "#490e96", "terapia intensiva" = "#1a8f2f", "isolamento domiciliare" = "#851128"))
p1
#ggsave(paste0( "images/variables_trend.png"), plot=p1, height=6, width=8, units="in", dpi = 150)
library(ggplot2)
library(RColorBrewer)
col <- c("#FF9636","#F9F6F0","#FFCD58","#A82810")
ggplot(df,aes(x=factor(color),y=nuovi_positivi))+
geom_boxplot(outlier.color="black", fill=col) +
labs(x = " ", y = "nuovi positivi")+
geom_jitter(color="black", width = 0)
#ggsave(paste0("images/boxplot_color.png"), width = 8, height = 5, dpi = 200)
p2 <- ggplot(df,aes(x=factor(color),y=ricoverati_con_sintomi)) +
geom_boxplot(outlier.color="black", fill=col) +
labs(x = " ", y = "ricoverati con sintomi") +
geom_jitter(color="black", width = 0)
p3 <- ggplot(df,aes(x=factor(color),y=nuovi_tamponi_pcr)) +
geom_boxplot(outlier.color="black", fill=col) +
labs(x = " ", y = "nuovi tamponi") +
geom_jitter(color="black", width = 0)
p2
#ggsave(paste0("images/boxplot_color1.png"), width = 8, height = 5, dpi = 200)
p3
#ggsave(paste0("images/boxplot_color2.png"), width = 8, height = 5, dpi = 200)
ggplot(df, aes(x=weekdays(df$data), y=df$nuovi_tamponi_pcr)) +
geom_boxplot(outlier.color="black", fill=c("#E7F2F8","#74BDCB","#B5E5CF","#EFE7BC","#E98973","#B99095","#88B2CC")) +
labs(x = "giorno della settimana", y = "numero tamponi") +
geom_jitter(color="black", width = 0) +
theme(axis.title.x = element_text(size = rel(1.2)), axis.title.y = element_text(size = rel(1.2)),
title = element_text(size = rel(1.2)))
#ggsave(paste0("images/boxplot_wekdays_tamponi.png"), width = 16, height = 9, dpi = 300)
ggplot(df, aes(x=weekdays(df$data), y=df$nuovi_positivi)) +
geom_boxplot(outlier.color="black", fill=c("#E7F2F8","#74BDCB","#B5E5CF","#EFE7BC","#E98973","#B99095","#88B2CC")) +
labs(x = "giorno della settimana", y = "nuovi positivi") +
geom_jitter(color="black", width = 0) +
theme(axis.title.x = element_text(size = rel(1.2)), axis.title.y = element_text(size = rel(1.2)),
title = element_text(size = rel(1.2)))
#ggsave(paste0("images/boxplot_wekdays_positivi.png"), width = 16, height = 9, dpi = 300)
#png("images/corr_scatterplot_response_variable.png", width=10,height=10,units="in",res=1200)
par(mfrow=c(2,2))
plot(nuovi_positivi ~ ricoverati_con_sintomi, data = df, pch =16, xlab = "ricoverati con sintomi", ylab = "nuovi positivi",col=col_zone[unclass(as.factor(df$color))])
plot(nuovi_positivi ~ terapia_intensiva, data = df, pch =16, xlab = "terapia intensiva", ylab = "nuovi positivi", col=col_zone[unclass(as.factor(df$color))])
plot(nuovi_positivi ~ isolamento_domiciliare, data = df, pch =16, xlab = "isolamento domiciliare", ylab = "nuovi positivi",col=col_zone[unclass(as.factor(df$color))])
plot(nuovi_positivi ~ nuovi_tamponi_pcr, data = df, pch =16, xlab = "nuovi tamponi", ylab = "nuovi positivi",col=col_zone[unclass(as.factor(df$color))])
#dev.off()
# Try some linear models to see which are the variables which significantly explain the variability of y
formula <- paste0("nuovi_positivi ~ ", c("ricoverati_con_sintomi",
"ricoverati_con_sintomi + color",
"ricoverati_con_sintomi * color",
"ricoverati_con_sintomi + color + nuovi_tamponi_pcr",
"(ricoverati_con_sintomi + nuovi_tamponi_pcr) * color"))
lm_mod1 <- lm(eval(formula[1]), data = df)
lm_mod2 <- lm(eval(formula[2]), data = df)
lm_mod3 <- lm(eval(formula[3]), data = df)
lm_mod4 <- lm(eval(formula[4]), data = df)
lm_mod5 <- lm(eval(formula[5]), data = df)
library("RColorBrewer")
# summary(lm_mod1)
# summary(lm_mod2)
# summary(lm_mod3)
# summary(lm_mod4)
# summary(lm_mod5)
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(lm_mod3), color = "model 3", group = 1), size=0.75) +
geom_line(data = df, aes(x = data, y = predict(lm_mod4), color = "model 4", group = 1), size=0.75) +
geom_line(data=df, aes(x = data, y = predict(lm_mod5), color = "model 5"), size=0.75)+
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
scale_color_brewer(palette = "Dark2")
ggsave(paste0("images/lm_mod.png"), width = 12, height = 5, dpi = 200)
lm_aic <- AIC(lm_mod1,lm_mod2,lm_mod3,lm_mod4, lm_mod5)
#lm_mselm<-rbind(get_mse(lm_mod1),get_mse(lm_mod2),get_mse(lm_mod3),get_mse(lm_mod4),get_mse(lm_mod5))
lm_table <- data.frame(formula,lm_aic[2])
colnames(lm_table) <- c("Model", "AIC")
n<- dim(lm_table)[1]
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:2], col=NA), padding=unit.c(unit(15, "mm"), unit(10, "mm")),fg_params=list(hjust=0, x=c(rep(0.02,n), rep(0.2,n)))),
colhead=list(bg_params=list(fill="#cee4f5"),fg_params=list(col="#0c1b4a",fontsize=14, fontface="bold",hjust=0, x=c(0.02,0.3)),padding=unit.c(unit(4, "mm"), unit(10, "mm"))),
rowhead=list(fg_params=list(col="orange", fontface=3L, hjust=0, x=0)))
# png("images/lm_table.png", width=10,height=8,units="in",res=1500)
# grid.newpage()
# grid.table(lm_table, rows = NULL, theme = tt3)
# dev.off()
glm_mod1 <- glm(eval(formula[1]), data = df, family=poisson(link = "log"))
glm_mod2 <- glm(eval(formula[2]), data = df, family=poisson(link = "log"))
glm_mod3 <- glm(eval(formula[3]), data = df, family=poisson(link = "log"))
glm_mod4 <- glm(eval(formula[4]), data = df, family=poisson(link = "log"))
glm_mod5 <- glm(eval(formula[5]), data = df, family=poisson(link = "log"))
# plot(glm_mod1)
# plot(glm_mod2)
# plot(glm_mod3)
# plot(glm_mod4)
# plot(glm_mod5)
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(glm_mod3,type="response"), color = "model 3", group = 1), size=0.75) +
geom_line(data = df, aes(x = data, y = predict(glm_mod4,type="response"), color = "model 4", group = 1),size=0.75) +
geom_line(data= df, aes(x= data, y = predict(glm_mod5, type="response"), color="model 5"), size=0.75)+
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
scale_color_brewer(palette = "Dark2")
#ggsave(paste0("images/glm_mod.png"), width = 12, height = 5, dpi = 200)
AIC(glm_mod1, glm_mod2, glm_mod3, glm_mod4, glm_mod5)
## Model checking - Residual plots
library(modelr)
library(ggplot2)
df$resid <- df$nuovi_positivi -  predict(glm_mod4,type="response")
ggplot(df, aes(data, resid, colour = color)) +
geom_ref_line(h = 0) +
geom_line()
df %>%
ggplot(aes(data, resid)) +
geom_ref_line(h = 0) +
geom_line(col=1) +
geom_smooth(se = FALSE, span = 0.20, col=3)
pred <- predict(glm_mod5, type="response")
res <- residuals(glm_mod5, type="deviance")
ggplot() +
geom_point(aes(x = log(pred), y = res), col="#2783c4") +
geom_smooth(aes(x = log(pred), y = res), col ="#45a377") +
geom_line(aes(x= log(pred), y = 0), lty=2) +
labs(x = "Fitted values", y = "Residuals", title = "Linearity", subtitle ="Rference line should be flat and horizontal") +
theme_light() +
theme(axis.title.x = element_text(size = rel(1.1)),axis.title.y = element_text(size = rel(1.1)),
title = element_text(size = rel(1.3)))
#ggsave(paste0("images/residuals_glm_mod.png"), width = 10, height = 6, dpi = 200)
glm_aic <- AIC(glm_mod1,glm_mod2,glm_mod3,glm_mod4, glm_mod5)
glm_mselm<-rbind(get_mse(glm_mod1),get_mse(glm_mod2),get_mse(glm_mod3),get_mse(glm_mod4),get_mse(glm_mod5))
glm_table <- data.frame(formula,glm_aic[2], glm_mselm)
colnames(glm_table) <- c("Model", "AIC", "MSE")
#library(gtable)
#png("images/glm_table.png", width=10,height=8,units="in",res=1500)
#grid.newpage()
#grid.table(glm_table, rows = NULL, theme = tt3)
#dev.off()
#GLM with negative binomial
require("MASS")
nrw<-length(df[,1])
listlm<-c("nglmod1","nglmod2","nglmod3","nglmod4","nglmod5")
param <-  c(" ricoverati_con_sintomi",
" ricoverati_con_sintomi + color",
" ricoverati_con_sintomi * color",
" ricoverati_con_sintomi + color + nuovi_tamponi_pcr",
" (ricoverati_con_sintomi + nuovi_tamponi_pcr) * color")
num_var<-5
l<-colnames(df)
counter<-1
str<-"nuovi_positivi"
for (i in 1:num_var){
if(counter>num_var) break
name<-paste("nglmod",counter, sep="")
f<-as.formula(paste(str, param[counter] ,sep = " ~ "))
tmp<-glm.nb(formula=f, data = df)
assign(name,tmp)
counter = counter +1
}
Gplot<-ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+ scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(x = "Time", y = "New positives")
counter<-1
tmpdf<-NULL
boh<-rep(0,nrw)
y<-matrix(nrow=nrw, ncol=num_var)
tmp<-nrw*num_var
m<-rep(0,tmp)
for(i in listlm){
name<-paste("model",counter,sep="")
tmp1<-paste("tmpdf",counter,sep="")
tmp<-as.name(i)
y[,counter]<-predict(eval(tmp),type="response")
l<-(nrw*(counter-1))
if(counter==1) l=1
r<-(nrw*counter)
m[l:r]<-name
counter<-counter+1
}
y<-as.vector(y)
x<-rep(df$data,num_var)
dfn<-data.frame("x"=x,"y"=y,"model"=m)
Gplot<-Gplot+geom_line( data=dfn,aes(x = x, y = y, color=model, group =model))
AIC(nglmod1,nglmod2,nglmod3,nglmod4)
AICn <- rbind(extractAIC(nglmod1)[2],extractAIC(nglmod2)[2],
extractAIC(nglmod3)[2])
#BIC <- rbind(extractAIC(lm1, k=log(n))[2],extractAIC(lm2,k=log(n))[2],
#            extractAIC(lm3,k=log(n))[2],extractAIC(lm4,k=log(n))[2])
# plot models
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(nglmod3,type="response"), color = "model 3", group = 1), size=0.75) +
geom_line(data = df, aes(x = data, y = predict(nglmod4,type="response"), color = "model 4", group = 1),size=0.75) +
geom_line(data= df, aes(x= data, y = predict(nglmod5, type="response"), color="model 5"), size=0.75)+
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
scale_color_brewer(palette = "Dark2")
#ggsave(paste0("images/nglm_mod.png"), width = 12, height = 5, dpi = 200)
# plot residuals
pred <- predict(nglmod5, type="response")
res <- residuals(nglmod5, type="deviance")
ggplot() +
geom_point(aes(x = log(pred), y = res), col="#2783c4") +
geom_smooth(aes(x = log(pred), y = res), col ="#45a377") +
geom_line(aes(x = log(pred), y = 0), lty=2) +
labs(x = "Fitted values", y = "Residuals", title = "Linearity", subtitle ="Reference line should be flat and horizontal") +
theme_light() +
theme(axis.title.x = element_text(size = rel(1.1)),axis.title.y = element_text(size = rel(1.1)),
title = element_text(size = rel(1.3)))
ggsave(paste0("images/residuals_nglm_mod.png"), width = 10, height = 6, dpi = 200)
library(performance)
library(gtable)
library(grid)
library(gridExtra)
formula <- paste0("nuovi_positivi ~ ", c("(ricoverati_con_sintomi + nuovi_tamponi_pcr) * color" , "ricoverati_con_sintomi + color + nuovi_tamponi_pcr","ricoverati_con_sintomi * color","ricoverati_con_sintomi + color" ,"ricoverati_con_sintomi" ))
all_compare <- compare_performance(lm_mod1,lm_mod2,lm_mod3,lm_mod4,lm_mod5,glm_mod1,glm_mod2,glm_mod3,glm_mod4,glm_mod5,nglmod1,nglmod2,nglmod3,nglmod4,nglmod5, rank=TRUE)
all_compare
all_compare$Name <- c(formula,formula,formula)
lm_compare <- compare_performance(lm_mod1,lm_mod2,lm_mod3,lm_mod4,lm_mod5, rank=TRUE)
lm_aic <- AIC(lm_mod5,lm_mod4,lm_mod3,lm_mod2, lm_mod1)
lm_compare$AIC <- lm_aic$AIC
lm_compare
lm_compare$Name <- formula
glm_compare <- compare_performance(glm_mod1,glm_mod2,glm_mod3,glm_mod4,glm_mod5, rank=TRUE)
glm_compare <- glm_compare[,-c(6,7)]
glm_aic <- AIC(glm_mod5,glm_mod4,glm_mod3,glm_mod2, glm_mod1)
glm_compare$R2_Nagelkerke <- glm_aic$AIC
colnames(glm_compare)[3] <- "AIC"
glm_compare$Name <- formula
ngb_compare <- compare_performance(nglmod1, nglmod2,nglmod3,nglmod4,nglmod5, rank=TRUE)
ngb_compare <- ngb_compare[,-c(6,7)]
ngb_aic <- AIC(nglmod5,nglmod4,nglmod3,nglmod2, nglmod1)
ngb_compare$R2_Nagelkerke <- ngb_aic$AIC
colnames(ngb_compare)[3] <- "AIC"
ngb_compare$Name <- formula
ngb_compare
# png("images/all_compare_table.png", width=28,height=9,units="in",res=1000)
# grid.newpage()
# grid.table(all_compare, rows = NULL, theme = tt3)
# dev.off()
# png("images/lm_compare_table.png", width = 20, height = 8, units = "in", res=1000)
# grid.newpage()
# grid.table(lm_compare,rows = NULL, theme = tt3)
# dev.off()
#
# png("images/glm_compare_table.png", width=20,height=8,units="in",res=1000)
# grid.newpage()
# grid.table(glm_compare, rows = NULL, theme = tt3)
# dev.off()
#png("images/ngb_compare_table.png", width=20,height=8,units="in",res=1000)
#grid.newpage()
#grid.table(ngb_compare, rows = NULL, theme = tt3)
#dev.off()
library(mgcv)
loess_mod1 <- loess(nuovi_positivi ~ terapia_intensiva + ricoverati_con_sintomi_prev + nuovi_tamponi_pcr  , data = df )
loess_mod1_pred <- predict(loess_mod1, type="response", se.fit = TRUE)
summary(loess_mod1)
d<-df
d$data <- as.numeric(d$data)
loess_mod1<-loess(nuovi_positivi~ data + ricoverati_con_sintomi + nuovi_tamponi_pcr, data = d)
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(loess_mod1,type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() +
geom_point(data = df_extended, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=col_zone[unclass(as.factor(df_extended$color))])+
geom_line(data = df_extended, aes(x = data, y = predict(loess_mod1,  newdata=df_extended, type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=col_zone[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(loess_mod1,  newdata=df, type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() +
geom_point(data = df_extended, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df_extended$color))])+
geom_line(data = df_extended, aes(x = data, y = predict(loess_mod1,type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() +
geom_point(data = df_extended, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=col_zone[unclass(as.factor(df_extended$color))])+
geom_line(data = df_extended, aes(x = data, y = predict(loess_mod1,type="response", newdata=df_extended), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot() +
geom_point(data = df, aes(x = data, y = nuovi_positivi, color="nuovi positivi", group = 1),col=col_zone[unclass(as.factor(df$color))])+
geom_line(data = df, aes(x = data, y = predict(loess_mod1,  type="response"), color = "loess model", group = 1)) +
labs(x = "Time", y = "New positives") +
scale_x_date(date_breaks = '5 days',
date_labels = '%Y-%m-%d') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data=df)+
geom_point(aes(x=ricoverati_con_sintomi, y=nuovi_positivi), col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(aes(x=ricoverati_con_sintomi,y=predict(glm_mod5, type="response"),color = "Fit", group = 1), size=0.75)+
scale_color_brewer(palette = "Dark2")
#ggsave(paste0("images/glm_mod_ric_vs_Y.png"), width = 12, height = 5, dpi = 200)
ggplot(data=df)+
geom_point(aes(x=nuovi_tamponi_pcr, y=nuovi_positivi), col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(aes(x=nuovi_tamponi_pcr,y=predict(glm_mod5, type="response"),color = "Fit", group = 1), size=0.75)+
scale_color_brewer(palette = "Dark2")
#ggsave(paste0("images/glm_mod_pcr_vs_Y.png"), width = 12, height = 5, dpi = 200)
ggplot(data=df)+
geom_point(aes(x=ricoverati_con_sintomi, y=nuovi_positivi), col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(aes(x=ricoverati_con_sintomi,y=predict(lm_mod5, type="response"),color = "Fit", group = 1), size=0.75)+
scale_color_brewer(palette = "Dark2")
#ggsave(paste0("images/lm_mod_ric_vs_Y.png"), width = 12, height = 5, dpi = 200)
ggplot(data=df)+
geom_point(aes(x=nuovi_tamponi_pcr, y=nuovi_positivi), col=c("#fc6b03","#cfcaca","#f2d729","#b3190b")[unclass(as.factor(df$color))])+
geom_line(aes(x=nuovi_tamponi_pcr,y=predict(lm_mod5, type="response"),color = "Fit", group = 1), size=0.75)+
scale_color_brewer(palette = "Dark2")
#ggsave(paste0("images/lm_mod_pcr_vs_Y.png"), width = 12, height = 5, dpi = 200)
library("Metrics")
#lm
x1 <- 1 - smape(predict(lm_mod5,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137]) #  0.3325639
#glm poisson
x2 <- 1 - smape(predict(glm_mod5,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137]) # 0.3308621
#glm negative binomial
x3 <- 1 - smape(predict(nglmod5,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137]) # 0.3537849
#gam
x4 <- 1 - smape(predict(gam_mod1,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137]) # 0.4643648
mod <- c("lm_mod5", "glm_mod5", "nglmod5", "gam_mod1")
smape <- c(x1,x2,x3,x4)
table <- table(mod, smape)
table
mod <- c("lm_mod5", "glm_mod5", "nglmod5", "gam_mod1")
smape <- c(x1,x2,x3,x4)
table <- table(c(mod, smape))
table
table <- table(c(mod, smape),ncol=2, byrow=TRUE)
mod <- c("lm_mod5", "glm_mod5", "nglmod5", "gam_mod1")
smape <- c(x1,x2,x3,x4)
table <- table(c(mod, smape),ncol=2, byrow=TRUE)
table <- table(mod, smape,ncol=2, byrow=TRUE)
table <- table("lm_mod5", "glm_mod5", "nglmod5", "gam_mod1",x1,x2,x3,x4,ncol=2, byrow=TRUE)
table
table <- table(c("lm_mod5", "glm_mod5", "nglmod5", "gam_mod1",x1,x2,x3,x4), ncol=2, byrow=TRUE)
table
#gam
x4 <- 1 - smape(predict(gam_mod1,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137]) # 0.4643648
#gam
x4 <- 1 - smape(predict(gam_mod1,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137]) # 0.4643648
x4
x4[1]
#lm
x1 <- 1 - smape(predict(lm_mod5,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137])[1] #  0.3325639
#glm poisson
x2 <- 1 - smape(predict(glm_mod5,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137])[1] # 0.3308621
#glm negative binomial
x3 <- 1 - smape(predict(nglmod5,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137])[1] # 0.3537849
#gam
x4 <- 1 - smape(predict(gam_mod1,type="response", newdata= df_extended[124:137,]), df_extended$nuovi_positivi[124:137])[1] # 0.4643648
table <- table(c("lm_mod5", "glm_mod5", "nglmod5", "gam_mod1",x1,x2,x3,x4), ncol=2, byrow=TRUE)
table <- matrix(c("lm_mod5", "glm_mod5","nglmod5", "gam_mod1",x1,x2,x3,x4), ncol=2, byrow=TRUE)
table
table <- matrix(c("lm_mod5", "glm_mod5","nglmod5", "gam_mod1",x1,x2,x3,x4), ncol=2, byrow=FALSE)
table
colnames(table) <- c('model','smape')
table
